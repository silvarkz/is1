#include <iostream>
#include <string>
using namespace std;

string encryptRailFence(string text, int key) {
    string encrypted_string = "";
    bool check = false;
    int j = 0;
    int row = key;
    int cols = text.length();

    char a[100][100];
    for (int i = 0; i < cols; i++) {
        if (j == 0 || j == key - 1) {
            check = !check;
        }
        a[j][i] = text[i];

        if (check)
            j++;
        else
            j--;
    }
    
    for (int i = 0; i < row; i++) {
        for (int k = 0; k < cols; k++) {
            if (a[i][k] != 0)
                encrypted_string += a[i][k];
        }
    }

    cout << "Encrypted Message: "<<endl;
    for (int i = 0; i < row; i++) {
        for (int k = 0; k < cols; k++) {
                cout << a[i][k] << ' ';
        }
         cout << endl;
    }
   

    

    return encrypted_string;
}

string decryptRailfence(string text, int key) {
    string decryptedtext = "";
    bool check = false;
    int j = 0;
    int row = key;
    int cols = text.length();

    char a[100][100];
    for (int i = 0; i < cols; i++) {
        if (j == 0 || j == key - 1) {
            check = !check;
        }
        a[j][i] = '*';

        if (check)
            j++;
        else
            j--;
    }

    int index = 0;
    check = false;
    for (int i = 0; i < row; i++) {
        for (int k = 0; k < cols; k++) {
            if (a[i][k] == '*' && index < cols) {
                a[i][k] = text[index++];
            }
        }
    }

    j = 0;
    for (int i = 0; i < cols; i++) {
        if (j == 0 || j == key - 1) {
            check = !check;
        }
        decryptedtext += a[j][i];

        if (check)
            j++;
        else
            j--;
    }

    return decryptedtext;
}

int main() {
    string text;
    int key;

    cout << "Enter Text: ";
    getline(cin, text);

    cout << "Enter Key: ";
    cin >> key;

    cout << "Encrypted Message: ";
    string encryptedText = encryptRailFence(text, key);
    cout << encryptedText << endl;

    cout << "Decrypted Message: ";
    string decryptedText = decryptRailfence(encryptedText, key);
    cout << decryptedText << endl;

    return 0;
}
